Question : https://www.hackerearth.com/problem/algorithm/gcd-function-9fe49c14/


def find_gcd(a,b):
    if a == 0:
        return b
    return find_gcd(b % a, a)
 
# Function to return LCM of two numbers
def find_lcm(a,b):
    return (a / find_gcd(a,b))* b

T = int(input())
while T > 0:
	N = int(input())
	print(N * (N + 1) // 2, end = ' ')
	l = []
	for i in range(1, N + 1):
		l.append(i)
	lcm = l[0]
	if N >= 2:
		b = l[1]
		if lcm > b:
			num = lcm
			den = b
		else:
			num= b
			den = lcm
		rem = num % den
		while rem != 0:
			num = den
			den = rem
			rem = num % den
		gcd = den
		lcm = int(int(lcm * b) / int(gcd))
	for i in range(2, len(l)):
		lcm = find_lcm(lcm, l[i])
		if lcm > l[i]:
			num = lcm
			den = l[i]
		else:
			num = l[i]
			den = lcm
		rem = num % den
		while rem != 0:
			num = den
			den = rem
			rem = num % den
		gcd = den
		lcm = int(int(lcm * l[i]) / int(gcd))
	print(lcm)
	T -= 1
